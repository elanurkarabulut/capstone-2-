      SUBROUTINE UMAT(STRESS, STATEV, DDSDDE, SSE, SPD, SCD, 
     &                RPL, DDSDDT, DRPLDE, STRAN, DSTRAN, TIME, DTIME, 
     &                PREDEF, DPRED, MATERL, NDI, NSHR, NTENS, 
     &                NSTATV, PROPS, NPROPS, COORDS, DROT, PNEWDT, CELENT, 
     &                DFGRD0, DFGRD1, NOEL, NPT, LAYER, KSPT, KSTEP, KINC)
C
C
C       STRESS(:)  : Güncellenmiş gerilme tensörü (Çıkış)
C       STATEV(:)  : İçsel değişkenler (Gir/Çık)
C       DDSDDE(:,:) : Malzeme tanjant modülü (Çıkış)
C       STRAN(:)   : Toplam şekil değiştirme
C       DSTRAN(:)  : Şekil değiştirme inkrementi
C       PROPS(:)   : Malzeme özellikleri
C       ...
C
C
      IMPLICIT NONE
      DOUBLE PRECISION STRESS(*), STATEV(*), DDSDDE(*),
     &                 STRAN(*), DSTRAN(*), TIME(*), PREDEF(*), DPRED(*),
     &                 PROPS(*), COORDS(*), DROT(*), DFGRD0(*), DFGRD1(*)
      DOUBLE PRECISION SSE, SPD, SCD, RPL, DDSDDT, DRPLDE(*), DTIME, PNEWDT,
     &                 CELENT
      INTEGER MATERL, NDI, NSHR, NTENS, NSTATV, NPROPS, NOEL, NPT, LAYER,
     &        KSPT, KSTEP, KINC

      INTEGER i,j
      DOUBLE PRECISION E, NU
      DOUBLE PRECISION stress_old(6), stress_trial(6), delta_strain(6), 
     &                 Cmat(6,6), G, K
      DOUBLE PRECISION tau_crit, slip_inc, plastic_indicator
      DOUBLE PRECISION orientation(3), pipeline_param

C    -------- From Pipeline --------
      orientation(1) = 0.0D0   ! Örnek Euler açısı phi1
      orientation(2) = 0.0D0   ! Örnek Euler açısı Phi
      orientation(3) = 0.0D0   ! Örnek Euler açısı phi2

      E = 210.0D3      ! MPa cinsinden elastisite modülü
      NU = 0.3D0
      tau_crit = 50.0D0  ! MPa cinsinden kritik kayma gerilmesi

C    Basit lineer elastik malzeme matrisi hesabı:
      K = E/(3.0D0*(1.0D0-2.0D0*NU))
      G = E/(2.0D0*(1.0D0+NU))

      CALL ZERO6x6(Cmat)
      CALL ELAST_6x6(K, G, Cmat)

C    Önce eski gerilmeyi oku (STATEV veya global bir atama ile yapılabilir)
C    Bu örnekte gerilmeyi sıfırdan başlattığımızı varsayıyoruz.
      DO i=1,6
        stress_old(i) = STRESS(i)
      END DO

C    Şekil değiştirme inkrementini oku
      DO i=1,6
        delta_strain(i) = DSTRAN(i)
      END DO

C    Basit elastik trial gerilme hesabı:
      CALL MATVEC6x6(Cmat,delta_strain,stress_trial)
      DO i=1,6
        stress_trial(i) = stress_old(i) + stress_trial(i)
      END DO

      plastic_indicator = ABS(stress_trial(4)) ! shear component (σ12)

C    Eğer kritik kayma gerilmesini aşıyorsak plastik kayma başlat:
      IF (plastic_indicator > tau_crit) THEN
         slip_inc = (plastic_indicator - tau_crit)/Cmat(4,4)
C        Gerilmeyi yeniden hesapla: plastik kayma gerilmeyi azaltır
         stress_trial(4) = SIGN(1.0D0, stress_trial(4)) * tau_crit
C        İçsel değişken güncelle (toplam plastik kayma miktarı)
         STATEV(1) = STATEV(1) + slip_inc
      ELSE
         slip_inc = 0.0D0
      END IF

C    Çıkışları atama
      DO i=1,6
        STRESS(i) = stress_trial(i)
      END DO

C    Tanjant modülü (basit yaklaşım: eğer plastisite varsa teğet modul biraz azaltılabilir)
      IF (slip_inc .GT. 0.0D0) THEN
         Cmat(4,4) = Cmat(4,4)*0.5D0  ! Sadece örnek olması açısından azaltma
      END IF

      DO i=1,6
        DO j=1,6
          DDSDDE( (i-1)*6 + j ) = Cmat(i,j)
        END DO
      END DO

      SSE = 0.0D0
      SPD = 0.0D0
      SCD = 0.0D0
      RPL = slip_inc
      DDSDDT = 0.0D0
      DO i=1,6
        DRPLDE(i) = 0.0D0
      END DO
      PNEWDT = DTIME

      RETURN
      END SUBROUTINE UMAT

C---------------------------------------
C Yardımcı alt rutinler (justification gerekiyor)
C---------------------------------------
      SUBROUTINE ZERO6x6(A)
      IMPLICIT NONE
      DOUBLE PRECISION A(6,6)
      INTEGER i,j
      DO i=1,6
         DO j=1,6
            A(i,j)=0.0D0
         END DO
      END DO
      RETURN
      END SUBROUTINE ZERO6x6

      SUBROUTINE ELAST_6x6(K,G,A)
      IMPLICIT NONE
      DOUBLE PRECISION A(6,6), K, G
      INTEGER i

      CALL ZERO6x6(A)

C     Elastisite matrisi izotropik
      A(1,1)=K+4.0D0*G/3.0D0
      A(2,2)=A(1,1)
      A(3,3)=A(1,1)
      A(1,2)=K-2.0D0*G/3.0D0
      A(2,1)=A(1,2)
      A(1,3)=A(1,2)
      A(3,1)=A(1,2)
      A(2,3)=A(1,2)
      A(3,2)=A(1,2)

      A(4,4)=G
      A(5,5)=G
      A(6,6)=G

      RETURN
      END SUBROUTINE ELAST_6x6

      SUBROUTINE MATVEC6x6(A,x,y)
      IMPLICIT NONE
      DOUBLE PRECISION A(6,6), x(6), y(6)
      INTEGER i,j
      DO i=1,6
        y(i)=0.0D0
        DO j=1,6
          y(i)=y(i)+A(i,j)*x(j)
        END DO
      END DO
      RETURN
      END SUBROUTINE MATVEC6x6
